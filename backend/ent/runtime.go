// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/F12aPPy/app/ent/antenatal"
	"github.com/F12aPPy/app/ent/babystatus"
	"github.com/F12aPPy/app/ent/pregnant"
	"github.com/F12aPPy/app/ent/schema"
	"github.com/F12aPPy/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	antenatalFields := schema.Antenatal{}.Fields()
	_ = antenatalFields
	// antenatalDescADDEDTIME is the schema descriptor for ADDED_TIME field.
	antenatalDescADDEDTIME := antenatalFields[0].Descriptor()
	// antenatal.DefaultADDEDTIME holds the default value on creation for the ADDED_TIME field.
	antenatal.DefaultADDEDTIME = antenatalDescADDEDTIME.Default.(func() time.Time)
	babystatusFields := schema.Babystatus{}.Fields()
	_ = babystatusFields
	// babystatusDescSTATUSBABYNAME is the schema descriptor for STATUS_BABY_NAME field.
	babystatusDescSTATUSBABYNAME := babystatusFields[0].Descriptor()
	// babystatus.STATUSBABYNAMEValidator is a validator for the "STATUS_BABY_NAME" field. It is called by the builders before save.
	babystatus.STATUSBABYNAMEValidator = babystatusDescSTATUSBABYNAME.Validators[0].(func(string) error)
	pregnantFields := schema.Pregnant{}.Fields()
	_ = pregnantFields
	// pregnantDescPREGNANTNAME is the schema descriptor for PREGNANT_NAME field.
	pregnantDescPREGNANTNAME := pregnantFields[0].Descriptor()
	// pregnant.PREGNANTNAMEValidator is a validator for the "PREGNANT_NAME" field. It is called by the builders before save.
	pregnant.PREGNANTNAMEValidator = pregnantDescPREGNANTNAME.Validators[0].(func(string) error)
	// pregnantDescPREGNANTAGE is the schema descriptor for PREGNANT_AGE field.
	pregnantDescPREGNANTAGE := pregnantFields[1].Descriptor()
	// pregnant.PREGNANTAGEValidator is a validator for the "PREGNANT_AGE" field. It is called by the builders before save.
	pregnant.PREGNANTAGEValidator = pregnantDescPREGNANTAGE.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUSEREMAIL is the schema descriptor for USER_EMAIL field.
	userDescUSEREMAIL := userFields[0].Descriptor()
	// user.USEREMAILValidator is a validator for the "USER_EMAIL" field. It is called by the builders before save.
	user.USEREMAILValidator = userDescUSEREMAIL.Validators[0].(func(string) error)
	// userDescUSERNAME is the schema descriptor for USER_NAME field.
	userDescUSERNAME := userFields[1].Descriptor()
	// user.USERNAMEValidator is a validator for the "USER_NAME" field. It is called by the builders before save.
	user.USERNAMEValidator = userDescUSERNAME.Validators[0].(func(string) error)
}
